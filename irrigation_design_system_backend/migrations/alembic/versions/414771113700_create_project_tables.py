"""create project tables

Revision ID: 414771113700
Revises: 
Create Date: 2024-01-19 11:24:58.837044

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "414771113700"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "projects",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=True),
        sa.Column("group_id", sa.String(length=100), nullable=True),
        sa.Column("description", sa.String(length=250), nullable=True),
        sa.Column(
            "status", sa.Enum("draft", "active", "inactive", name="project_status"), nullable=True
        ),
        sa.Column("crop", sa.String(length=100), nullable=True),
        sa.Column(
            "maximum_actual_irrigation_required", sa.DECIMAL(precision=10, scale=2), nullable=True
        ),
        sa.Column("crop_evapotranspiration", sa.DECIMAL(precision=10, scale=2), nullable=True),
        sa.Column("total_irrigation_required", sa.DECIMAL(precision=10, scale=2), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_projects_id"), "projects", ["id"], unique=False)
    op.create_index(op.f("ix_projects_user_id"), "projects", ["user_id"], unique=False)

    # derivation line table
    op.create_table(
        "derivation_lines",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("project_id", sa.BigInteger(), nullable=True),
        sa.Column("pipe_type", sa.String(length=250), nullable=True),
        sa.Column("inlet_pressure", sa.DECIMAL(precision=10, scale=2), nullable=True),
        sa.Column("length", sa.JSON(), nullable=True),
        sa.Column("diameter", sa.JSON(), nullable=True),
        sa.Column("localized_loss", sa.String(length=250), nullable=True),
        sa.Column(
            "type", sa.Enum("with_plc", "without_plc", name="derivation_line_types"), nullable=True
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_derivation_lines_id"), "derivation_lines", ["id"], unique=False)
    op.create_index(
        op.f("ix_derivation_lines_project_id"), "derivation_lines", ["project_id"], unique=False
    )

    # lateral line table
    op.create_table(
        "lateral_lines",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("project_id", sa.BigInteger(), nullable=True),
        sa.Column("dripper", sa.String(length=250), nullable=True),
        sa.Column("decline", sa.DECIMAL(precision=10, scale=2), nullable=True),
        sa.Column("inlet_pressure", sa.DECIMAL(precision=10, scale=2), nullable=True),
        sa.Column("separation_between_issuers", sa.DECIMAL(precision=10, scale=2), nullable=True),
        sa.Column("length_max", sa.DECIMAL(precision=10, scale=2), nullable=True),
        sa.Column("diameter", sa.DECIMAL(precision=10, scale=2), nullable=True),
        sa.Column("localized_loss", sa.DECIMAL(precision=10, scale=2), nullable=True),
        sa.Column(
            "type", sa.Enum("with_plc", "without_plc", name="lateral_line_types"), nullable=True
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_lateral_lines_id"), "lateral_lines", ["id"], unique=False)
    op.create_index(
        op.f("ix_lateral_lines_project_id"), "lateral_lines", ["project_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_lateral_lines_project_id"), table_name="lateral_lines")
    op.drop_index(op.f("ix_lateral_lines_id"), table_name="lateral_lines")
    op.drop_table("lateral_lines")
    op.execute("DROP TYPE IF EXISTS lateral_line_types")

    op.drop_index(op.f("ix_derivation_lines_project_id"), table_name="derivation_lines")
    op.drop_index(op.f("ix_derivation_lines_id"), table_name="derivation_lines")
    op.drop_table("derivation_lines")
    op.execute("DROP TYPE IF EXISTS derivation_line_types")

    op.drop_index(op.f("ix_projects_user_id"), table_name="projects")
    op.drop_index(op.f("ix_projects_id"), table_name="projects")
    op.drop_table("projects")
    op.execute("DROP TYPE IF EXISTS project_status")
    # ### end Alembic commands ###
